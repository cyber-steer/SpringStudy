“ID 인증의 연방”이라는 것은 (페이스북, 트위터, 구글, 깃허브 등) 다양한 서비스의 ID를 파이어베이스 인증 한 군데에서 관리할 수 있다는 것입니다. 누군가는 이런 방식은 ‘연방’이 아니라 ‘연동(integration)’이 더욱 정확한 표현이라고 말할 수도 있겠지만, 어쨌든 저는 연방이라는 표현도 마음에 듭니다.
어떤 경우든 간에, 저는 사람들이 파이어베이스 인증을 배워서 각자의 앱에 가장 먼저 그것을 연동시키라고 말합니다. 그러면 “개발하기” 그룹에 속하는 다른 제품들을 활용해서 사용자의 데이터를 저장할 때에도, 보안의 중요성을 항상 염두에 둘 수 있기 때문입니다.
파이어베이스의 실시간 데이터베이스(Realtime Database)와 클라우드 파이어스토어(Cloud Firestore)는 데이터베이스 서비스를 제공합니다. 저는 두 개의 제품 모두를 ‘클라우드에 호스팅 된 실시간의 비관계형(NoSQL) 데이터베이스’라고 적어 놓았습니다. 이들 제품에는 각자의 강점과 약점들이 있습니다. 그렇기 때문에 여러분에게 어느 것이 더 적합한지를 알아내려면 약간의 조사를 하는 것이 좋습니다. 힌트를 드리자면, 클라우드 파이어스토어를 먼저 살펴보시기 바랍니다. 왜냐하면 여러분이 원하는 걸 더 많이 해결해 줄 가능성이 크고, 또한 확장성도 아주 좋습니다. 여러분의 앱이 어떠한가에 따라서 둘 중 하나를 사용할 수도 있고, 두 개를 함께 사용할 수도 있습니다.
그리고 파이어스토어는 기술적으로 보자면 파이어베이스의 제품이 아닌 구글 클라우드(Google Cloud)의 제품이라는 점에 주목할 필요가 있습니다. 그런데 왜 파이어베이스와 함께 묶어서 설명을 하고 있을까요? 파이어베이스가 모바일 앱에서 파이어스토어를 사용할 수 있는 SDK를 제공하고 있기 때문입니다. 그래서 우리는 (파이어스토어의) 데이터를 직접 액세스 할 수 있게 해주고, 미들웨어라는 성가신 구성요소를 없앨 수 있습니다. 여기에서 설명하는 다른 제품들도 구글 클라우드와 비슷한 관계인 것들이 있는데, 해당하는 경우에 대해서는 앞으로 설명하면서 언급하도록 하겠습니다.
이들 데이터베이스에서 정말로 특별한 점은 데이터베이스가 변경이 되었을 때 그 데이터들을 “실시간”으로 업데이트해준다는 것입니다. 우리는 클라이언트(단말) SDK를 사용해서 앱에서 사용하고자 하는 데이터가 있는 위치에 “리스너(listener, 요청을 받는 부분)”를 설정할 수 있습니다. 그러면 변경 사실이 감지될 때마다 리스너가 그 사실을 자동으로 알 수 있습니다. 따라서 관심을 두고 있는 데이터를 폴링(poll, 주기적으로 확인하는 것)할 필요 없이, 앱을 언제나 최신 상태로 보여줄 수 있습니다.